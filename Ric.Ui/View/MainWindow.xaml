<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:converter="clr-namespace:Ric.Ui.Converter"
	xmlns:extender="clr-namespace:Ric.Ui.Extender"
	xmlns:extended="clr-namespace:Ric.Ui.Control"
	x:Class="Ric.Ui.View.MainWindow"
	x:Name="Window"
	Icon="..\Images\application-sidebar-list.png"
	Title="Ric Generator"
	Height="610" 
	MinHeight="550"
	SizeToContent="Width"
	MinWidth="220"
	WindowStyle="None"
	AllowsTransparency="True"
	MouseLeftButtonDown="MainWindow_OnMouseLeftButtonDown"
    DataContext="{Binding Myvm, RelativeSource={RelativeSource Self}}"
	Loaded="MainWindow_OnLoaded" Background="{x:Null}" Width="839" Foreground="{x:Null}">
    <Window.Resources>
        <converter:ExplicitPropertyConverter x:Key="PropertyConverter" />
        <converter:ImageStringConverter x:Key="ImageConverter" />
        <!--
        <Color x:Key="MainText">#FFC7C7C7</Color>
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FF303030" />
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FFD3D3D3" />
        <SolidColorBrush x:Key="AbleForegroundBrush" Color="#FFFFFF" />
        -->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border 
			Name="Border"
			Margin="0,0,-4,0" 
			Background="{StaticResource DisabledBackgroundBrush}"
			BorderBrush="{StaticResource SolidBorderBrush}" 
			BorderThickness="0, 0, 0, 0" 
			CornerRadius="0, 0, 0, 0" >
                                <ContentPresenter x:Name="ContentSite"
			  VerticalAlignment="Center"
			  HorizontalAlignment="Center"
			  ContentSource="Header"
			  Margin="12,2,12,2"
			  RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="0" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="0, 0, 0, 0" />
                                <Setter Property="Foreground" Value="{StaticResource AbleForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding LogoutCommand}" CommandParameter="{Binding ElementName=Window}"
					Key="C" Modifiers="Control" >
        </KeyBinding>
        <KeyBinding Command="{Binding ShowInfoCommand}"
					Key="O" Modifiers="Control" >
        </KeyBinding>
        <KeyBinding Command="{Binding ShowQueueCommand}"
					Key="S" Modifiers="Control" >
        </KeyBinding>
        <KeyBinding Command="{Binding QueueCommand}"
					Key="Q" Modifiers="Control" >
        </KeyBinding>
    </Window.InputBindings>
    <Border BorderThickness="1" Margin="0">
        <Border.Background>
            <SolidColorBrush Color="{DynamicResource MainBackground}"/>
        </Border.Background>
        <Border.BorderBrush>
            <SolidColorBrush Color="{DynamicResource Border}"/>
        </Border.BorderBrush>
        <Grid x:Name="MainGrid" Width="Auto" Background="#FF303030" Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="55"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid x:Name="TopPart" Height="55" Margin="0.067,0,0,0" VerticalAlignment="Top"
				Width="Auto">
                <Menu Height="23.136" VerticalAlignment="Top" Margin="2.386,30.697,0,0" HorizontalAlignment="Left" Width="Auto">
                    <Menu.Background>
                        <SolidColorBrush Color="Black" Opacity="0"/>
                    </Menu.Background>
                    <MenuItem Header="Infos" Padding="3,2,3,3"
						Command="{Binding ShowInfoCommand}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" >
                        <MenuItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource MainText}"/>
                        </MenuItem.Foreground>
                    </MenuItem>
                    <MenuItem Header="Queue" Width="45.333" Command="{Binding ShowQueueCommand}" Foreground="LightGray" Padding="3,2,3,3"/>
                    <MenuItem Header="Admin" Visibility="{Binding IsAdmin}" Click="AdminItem_OnClick" Foreground="LightGray" Padding="3,2,3,3"/>
                    <MenuItem Header="Dev" Visibility="{Binding IsDev}" Click="DeveloperItem_OnClick" Foreground="LightGray" Padding="6,2,6,3"/>
                    <MenuItem Header="Database" Click="DatabaseItem_OnClick" Foreground="LightGray" Padding="6,2,6,3"/>
                    <MenuItem Header="ConfigFolder" Foreground="LightGray" Padding="6,2,6,3" Click="ConfigFolderItem_OnClick" />
                    <MenuItem Header="ETIAutoFolder" Foreground="LightGray" Padding="6,2,6,3" Click="ETIAutoFolderItem_OnClick" />
                </Menu>
                <Separator Height="1.167" Margin="0,53.833,0,0" VerticalAlignment="Top">
                    <Separator.Background>
                        <SolidColorBrush Color="Black" Opacity="0.49"/>
                    </Separator.Background>
                </Separator>
                <TextBlock HorizontalAlignment="Left" Height="25" Margin="35.152,6,0,0" Name="textBlock"
					TextWrapping="Wrap" VerticalAlignment="Top" Width="271" FontSize="16" FontStyle="Normal" DataContext="{Binding}" Grid.Row="1" Grid.Column="1" FontWeight="Bold" FontStretch="Normal" Foreground="#FFD37529">
                    <TextBlock.Text>RIC Generator - Production</TextBlock.Text>
                </TextBlock>
                <Image Margin="4.319,3.477,0,0" Source="../Images/thomson-reuters-logo.png" Stretch="Fill" Height="23.553" VerticalAlignment="Top" HorizontalAlignment="Left" Width="25.833"/>
                <Button HorizontalAlignment="Right" Command="{Binding MinimizeCommand}"  CommandParameter="{Binding ElementName=Window}" Margin="0,6,46.933,0" VerticalAlignment="Top" Width="20" Height="21" BorderBrush="{x:Null}"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                    <Button.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </Button.Background>
                    <Image Source="../Images/reduceWindow.png" Stretch="Uniform" Width="12"></Image>
                </Button>
                <Button Command="{Binding MaximizeCommand}"  CommandParameter="{Binding ElementName=Window}" Margin="0,6,25.933,0" VerticalAlignment="Top" Height="21" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="21"
                        
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" >
                    <Button.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </Button.Background>
                    <Image Source="../Images/changeSize.png" Stretch="Uniform" Width="12"/>
                </Button>
                <Button Command="{Binding CloseCommand}"  CommandParameter="{Binding ElementName=Window}" Margin="0,6,5.933,0" VerticalAlignment="Top" Height="21" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="20" RenderTransformOrigin="0.42,0.533"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                    <Button.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </Button.Background>
                    <Image Source="../Images/closeWindow.png" Stretch="Uniform" Width="12"></Image>
                </Button>
                <Label Height="21" HorizontalAlignment="Left" Margin="312,6,0,0" Name="lbVersion" VerticalAlignment="Top" Width="249" FontSize="10" Foreground="Silver" />
            </Grid>
            <Grid x:Name="BottomPart" Margin="0" Grid.Row="1"
					Width="Auto" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" MinWidth="100" MaxWidth="350"/>
                    <extended:ColumnDefinitionExtension Visible="{Binding GridWidth}" Width="2" MinWidth="2"/>
                    <extended:ColumnDefinitionExtension Visible="{Binding GridWidth}" Width="*"/>
                    <extended:ColumnDefinitionExtension Visible="{Binding GridWidth}" Width="2" MinWidth="2"/>
                    <extended:ColumnDefinitionExtension Visible="{Binding GridWidth}" Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="Tasks" Grid.Column="0" Background="#FF303030">
                    <TextBox Height="20" TextWrapping="Wrap" VerticalAlignment="Top"
						Text="{Binding TaskFilter, UpdateSourceTrigger=PropertyChanged}" Padding="3,1,1,1" >
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Opacity" Value="0.9" />
                                <Setter Property="BorderThickness" Value="0,0.5" />
                                <Setter Property="Background" Value="#FF303030" />
                                <Setter Property="Foreground" Value="Gray" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="1.0" />
                                        <Setter Property="Background" Value="#FF505050" />
                                        <Setter Property="Foreground" Value="#FFFFFFFF" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource Border}" />
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Opacity" Value="1.0" />
                                        <Setter Property="Background" Value="#FF505050" />
                                        <Setter Property="Foreground" Value="#FFFFFFFF" />
                                        <Setter Property="BorderBrush" Value="#FFDA8927" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Image Margin="0,2,1.572,0" Source="../Images/magnifier.png" Stretch="Fill" Height="15" VerticalAlignment="Top" HorizontalAlignment="Right" Width="16.333"/>
                    <ListView Grid.Column="0" 
						Margin="10,56.166,0,0" 
						x:Name="TaskList"
						ItemsSource="{Binding FilteredTasks}"
						SelectedIndex="{Binding TaskIndex}"
						SelectedItem="{Binding SelectedTask}"
						BorderThickness="0,1,0,0" Foreground="LightGray" SelectionMode="Single">
                        <ListView.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource Border}"/>
                        </ListView.BorderBrush>
                        <ListView.Background>
                            <SolidColorBrush Color="#FFDA8927" Opacity="0"/>
                        </ListView.Background>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" />
                                </WrapPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ContextMenu>
                            <ContextMenu x:Name="ZoneIformationList" StaysOpen="False" Background="WhiteSmoke">
                                <MenuItem Header="Open config" x:Name="OpenConfigContextMenu" Click="OpenConfigContextMenu_OnClick" >
                                    <MenuItem.Icon>
                                        <Image Source="../Images/equalizer--pencil.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="Run task" x:Name="PlayContextMenu" Command="{Binding RunCommand}" >
                                    <MenuItem.Icon>
                                        <Image Source="../Images/control.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Add task to queue" x:Name="AddQueueContextMenu" Command="{Binding QueueCommand}" >
                                    <MenuItem.Icon>
                                        <Image Source="../Images/task--plus.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="Schedule run" x:Name="ScheduleContextMenu" IsEnabled="True" Command="{Binding OpenScheduleCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="../Images/clock--plus.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="See history" x:Name="HistoryContextMenu" IsEnabled="True" >
                                    <MenuItem.Icon>
                                        <Image Source="../Images/clock-history.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="See result file" x:Name="SeeResultContextMenu" Command="{Binding FilterResultCommand}" >
                                    <MenuItem.Icon>
                                        <Image Source="../Images/magnifier.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding RunCommand}"/>
                        </ListView.InputBindings>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <EventSetter Event="MouseDoubleClick" Handler="OnTaskListDoubleClick"/>
                                <Setter Property="Opacity" Value="0.9" />
                                <Setter Property="Height" Value="20" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Opacity" Value="1.0" />
                                        <Setter Property="Background" Value="Gray" />
                                        <Setter Property="Height" Value="20" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <ComboBox Margin="11,25,10,0" VerticalAlignment="Top" 
						ItemsSource="{Binding MarketList}" 
						SelectedItem="{Binding SelectedMarket}" 
						IsEnabled="True" Height="26.166" Foreground="#FF171717" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image x:Name="FlagImage" Source="{Binding Abbreviation, Converter={StaticResource ImageConverter}}" Stretch="None" />
                                    <TextBlock Text="  " />
                                    <TextBlock Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
                <GridSplitter
                              Grid.Column="1"
					          Visibility="{Binding GridVisibility}" HorizontalAlignment="Stretch"  >
                    <GridSplitter.Background>
                        <SolidColorBrush Color="Black" Opacity="0.495"/>
                    </GridSplitter.Background>
                </GridSplitter>
                <Grid x:Name="Infos"
					Grid.Column="2" Grid.ColumnSpan="1" Margin="0" >
                    <Grid.Background>
                        <SolidColorBrush Color="{DynamicResource MainBackground}"/>
                    </Grid.Background>
                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="18"
						x:Name="TitleTextBlock" Width="242" Height="24"
						Text="{Binding SelectedTask.Name}" Margin="42,47,0,0" >
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{DynamicResource MainText}"/>
                        </TextBlock.Foreground>
                    </TextBlock>
                    <Image x:Name="FlagImage" HorizontalAlignment="Left" Width="19.337" Height="19.262" VerticalAlignment="Top" RenderTransformOrigin="0.997,0.452"
						Source="{Binding SelectedTask.Market.Abbreviation, Converter={StaticResource ImageConverter}}" Margin="17.403,52.233,0,0" />
                    <ListView Margin="8,159,8,0"  x:Name="resultList" 
						ItemsSource="{Binding FilteredResults}" 
						SelectedItem="{Binding SelectedResult}"
						extender:ListViewExtenders.AutoScrollToEnd="True"
						MouseDoubleClick="ResultList_OnMouseDoubleClick"
						BorderThickness="0,1,0,0" Height="146" VerticalAlignment="Top">
                        <ListView.Foreground>
                            <SolidColorBrush Color="{DynamicResource MainText}"/>
                        </ListView.Foreground>
                        <ListView.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource Border}"/>
                        </ListView.BorderBrush>
                        <ListView.Background>
                            <SolidColorBrush Color="White" Opacity="0"/>
                        </ListView.Background>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat=" {0} ({1})">
                                            <Binding Path="FileName" />
                                            <Binding Path="Type" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                    <TextBlock.ToolTip>
                                        <Binding Path="FilePath" />
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ContextMenu>
                            <ContextMenu x:Name="ResultMenu" StaysOpen="False" Background="WhiteSmoke">
                                <MenuItem Header="Open file" x:Name="OpenFileContextMenu" Command="{Binding OpenFileCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="../Images/document--arrow.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Open folder" x:Name="OpenFolderContextMenu" Command="{Binding OpenFolderCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="../Images/folder--arrow.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                    </ListView>
                    <Label HorizontalAlignment="Left" Height="30" Margin="7,124,0,0" FontSize="16" Content="Result files" VerticalAlignment="Top" Foreground="#FFC1C1C1" FontWeight="SemiBold"/>
                    <ListView IsEnabled="True" Focusable="False" Cursor="Arrow"
							  ItemsSource="{Binding Log}" 
						      extender:ListViewExtenders.AutoScrollToEnd="True" BorderThickness="0,1,0,0" Margin="8,351,6,12" Background="{x:Null}" Foreground="#FF909090">
                        <ListView.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource Border}"/>
                        </ListView.BorderBrush>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Message}" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Label Content="Log" HorizontalAlignment="Left" Margin="10,315,0,0" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Top" Height="Auto" Width="Auto">
                        <Label.Foreground>
                            <SolidColorBrush Color="{DynamicResource MainText}"/>
                        </Label.Foreground>
                    </Label>
                    <TextBox Height="21" Margin="0,129,8,0" TextWrapping="Wrap" VerticalAlignment="Top"
						Text="{Binding ResultFilter, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0.5" HorizontalAlignment="Right" Width="154" >
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Opacity" Value="0.9" />
                                <Setter Property="BorderThickness" Value="0,0.5" />
                                <Setter Property="Background" Value="#FF303030" />
                                <Setter Property="Foreground" Value="Gray" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="1.0" />
                                        <Setter Property="Background" Value="#FF505050" />
                                        <Setter Property="Foreground" Value="#FFFFFFFF" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource Border}" />
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Opacity" Value="1.0" />
                                        <Setter Property="Background" Value="#FF505050" />
                                        <Setter Property="Foreground" Value="#FFFFFFFF" />
                                        <Setter Property="BorderBrush" Value="#FFDA8927" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Image Margin="0,132,12,0" Source="../Images/magnifier.png" Stretch="Fill" RenderTransformOrigin="-1.083,-7.197" Height="15" VerticalAlignment="Top" HorizontalAlignment="Right" Width="16"/>
                    <Separator Height="10" Margin="0,114,0,0" VerticalAlignment="Top">
                        <Separator.Background>
                            <SolidColorBrush Color="Black" Opacity="0.5"/>
                        </Separator.Background>
                    </Separator>
                    <Separator Height="10" Margin="0,305,0,0" VerticalAlignment="Top">
                        <Separator.Background>
                            <SolidColorBrush Color="Black" Opacity="0.5"/>
                        </Separator.Background>
                    </Separator>
                    <Label HorizontalAlignment="Left" Height="30.166" Margin="7,5,0,0" FontSize="16" Content="Task details" VerticalAlignment="Top" Width="Auto" Foreground="#FFC1C1C1" FontWeight="SemiBold"/>
                    <Separator Height="3.668" Margin="10,35.166,6.882,0" VerticalAlignment="Top">
                        <Separator.Background>
                            <SolidColorBrush Color="{DynamicResource Border}"/>
                        </Separator.Background>
                    </Separator>
                    <Button Height="24.273" Margin="0,47.222,11.782,0" VerticalAlignment="Top"
						Command="{Binding RunCommand}" HorizontalAlignment="Right" Width="90">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../Images/control.png" Stretch="None" />
                            <TextBlock Margin="3,0,0,0"><Run Text="Run"/></TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Height="23" Margin="0,86,221,0" VerticalAlignment="Top"
						    Command="{Binding FilterResultCommand}" HorizontalAlignment="Right"
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../Images/magnifier.png" Stretch="None" />
                            <TextBlock Margin="3,0,0,0">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource MainText}"/>
                                </TextBlock.Foreground><Run Text="Results"/></TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Height="23" Margin="0,86,114,0" VerticalAlignment="Top"
						    Command="{Binding OpenScheduleCommand}" HorizontalAlignment="Right"
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../Images/clock--plus.png" Stretch="None" />
                            <TextBlock Margin="3,0,0,0">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource MainText}"/>
                                </TextBlock.Foreground><Run Text="Schedule"/></TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Height="23" Margin="0,86,314,0" VerticalAlignment="Top"
						    Command="{Binding OpenConfigCommand}" HorizontalAlignment="Right"
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../Images/equalizer--pencil.png" Stretch="None" />
                            <TextBlock Margin="3,0,0,0">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource MainText}"/>
                                </TextBlock.Foreground><Run Text="Config"/></TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Height="23" Margin="0,86,24,0" VerticalAlignment="Top"
						    Command="{Binding QueueCommand}" HorizontalAlignment="Right"
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../Images/task--plus.png" Stretch="None" />
                            <TextBlock Margin="3,0,0,0">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource MainText}"/>
                                </TextBlock.Foreground><Run Text="Queue"/></TextBlock>
                        </StackPanel>
                    </Button>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Width="22"
                    	Command="{Binding ReportDevCommand}"
                    	Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                    	ToolTip="Report error" Padding="2,0" BorderBrush="{x:Null}" Background="{x:Null}" Margin="338,321,0,0">
                        <Image Height="16" Source="../Images/exclamation.png" Stretch="Fill" Width="16"/>
                    </Button>
                    <Separator Height="5" Margin="10,76,8,0" VerticalAlignment="Top">
                        <Separator.Background>
                            <SolidColorBrush Color="{DynamicResource Border}"/>
                        </Separator.Background>
                    </Separator>
                </Grid>
                <Grid Grid.Column="3" HorizontalAlignment="Left" Width="2">
                    <GridSplitter
						Visibility="{Binding QueueVisibility}" HorizontalAlignment="Stretch"
                        IsEnabled="False">
                        <GridSplitter.Background>
                            <SolidColorBrush Opacity="0.495" Color="Black"/>
                        </GridSplitter.Background>
                    </GridSplitter>
                </Grid>
                <Grid x:Name="Queue" Visibility="{Binding QueueVisibility}" Grid.Column="4">
                    <Grid.Background>
                        <SolidColorBrush Color="{DynamicResource MainBackground}"/>
                    </Grid.Background>
                    <ListView x:Name="ScheduleListView" Background="#FF303030" BorderThickness="0,1,0,0" Margin="0,292,0,0"
                    	ItemsSource="{Binding ScheduledList}"
                    	SelectedItem="{Binding SelectedSchedule}" DataContext="{Binding}">
                        <ListView.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource Border}"/>
                        </ListView.BorderBrush>
                        <ListView.Foreground>
                            <SolidColorBrush Color="{DynamicResource MainText}"/>
                        </ListView.Foreground>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat=" {2} {1:hh\:mm tt} : {0}">
                                            <Binding Path="Task.Name" />
                                            <Binding Path="Date" />
                                            <Binding Path="DayOfWeek"/>         
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ContextMenu>
                            <ContextMenu StaysOpen="False" Background="WhiteSmoke">
                                <MenuItem Header="Parameters" Command="{Binding ChangeScheduleCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="../Images/clock--pencil.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Delete" Command="{Binding RemoveScheduleCommand}" CommandParameter="{Binding SelectedItem, ElementName=ScheduleListView}">
                                    <MenuItem.Icon>
                                        <Image Source="../Images/clock--minus.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="Add schedule" Click="ScheduleContextMenu_OnClick">
                                    <MenuItem.Icon>
                                        <Image Source="../Images/clock--plus.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>

                    </ListView>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Width="22" Margin="6,272,0,0"
                    	Click="ScheduleContextMenu_OnClick"
                    	ToolTip="Add schedule" Padding="2,0" BorderBrush="{x:Null}" Background="{x:Null}"
                    	Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" >
                        <Image Height="16" Source="../Images/plus.png" Stretch="Fill" Width="16"/>
                    </Button>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Width="22" Margin="28,272,0,0"
                    	Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                    	Command="{Binding RemoveScheduleCommand}" CommandParameter="{Binding SelectedItem, ElementName=ScheduleListView}"
                    	ToolTip="Remove schedule" Padding="2,0" BorderBrush="{x:Null}" Background="{x:Null}">
                        <Image Height="16" Source="../Images/cross.png" Stretch="Fill" Width="16"/>
                    </Button>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Margin="50,272,0,0"
                    	Command="{Binding ChangeScheduleCommand}"
                    	Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                    	ToolTip="Modify schedule parameters" Padding="2,0" Background="{x:Null}" BorderBrush="{x:Null}" Width="22">
                        <Image Height="16" Source="../Images/document--pencil.png" Stretch="Fill" Width="16"/>
                    </Button>
                    <ListView x:Name="QueueListView"
                    	BorderThickness="0,1,0,0" Foreground="LightGray" SelectionMode="Single"
                    	ItemsSource="{Binding QueueList}"
                    	SelectedIndex="{Binding QueueIndex}"
                    	SelectedItem="{Binding SelectedQueue}" Background="#FF303030" Margin="0,57,0,0" Height="182" VerticalAlignment="Top" Padding="0">
                        <ListView.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource Border}"/>
                        </ListView.BorderBrush>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" />
                                </WrapPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ContextMenu>
                            <ContextMenu StaysOpen="False" Background="WhiteSmoke">
                                <MenuItem Header="Remove from queue" Command="{Binding RemoveCommand}" >
                                    <MenuItem.Icon>
                                        <Image Source="../Images/task--minus.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Move up" Command="{Binding MoveUpQueueCommand}"  CommandParameter="{Binding SelectedIndices, ElementName=QueueListView}">
                                    <MenuItem.Icon>
                                        <Image Source="../Images/task-select-last.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Move down" Command="{Binding MoveDownQueueCommand}"  CommandParameter="{Binding SelectedIndices, ElementName=QueueListView}">
                                    <MenuItem.Icon>
                                        <Image Source="../Images/task-select-first.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Opacity" Value="0.9" />
                                <Setter Property="Height" Value="25" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Opacity" Value="1.0" />
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Width="22"
                    	Command="{Binding RemoveCommand}"
                    	Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                    	ToolTip="Clear queue" Padding="2,0" BorderBrush="{x:Null}" Background="{x:Null}" Margin="3,36,0,0">
                        <Image Height="16" Source="../Images/cross.png" Stretch="Fill" Width="16"/>
                    </Button>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Width="22"
                    	Command="{Binding StartQueueCommand}"
                    	Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"  
                    	ToolTip="Start queue" Padding="2,0" BorderBrush="{x:Null}" Background="{x:Null}" Margin="28,36,0,0">
                        <Image Height="16" Source="../Images/control.png" Stretch="Fill" Width="16"/>
                    </Button>
                    <Label Content="Schedule" HorizontalAlignment="Left" Margin="6,242,0,0" VerticalAlignment="Top" Width="186" Height="25" Padding="3,1,1,1" FontSize="16" FontWeight="SemiBold">
                        <Label.Foreground>
                            <SolidColorBrush Color="{DynamicResource MainText}"/>
                        </Label.Foreground>
                    </Label>
                    <Label Content="Queue" HorizontalAlignment="Left" VerticalAlignment="Top" Width="87" Height="21" Padding="1" Margin="6,4,0,0" FontSize="16" FontWeight="SemiBold">
                        <Label.Foreground>
                            <SolidColorBrush Color="{DynamicResource MainText}"/>
                        </Label.Foreground>
                    </Label>
                    <Separator Height="3" Margin="0,268,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                        <Separator.Background>
                            <SolidColorBrush Color="{DynamicResource Border}"/>
                        </Separator.Background>
                        <Separator.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="-1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Separator.RenderTransform>
                    </Separator>
                    <Separator Height="4" Margin="0,29,1,0" VerticalAlignment="Top">
                        <Separator.Background>
                            <SolidColorBrush Color="{DynamicResource Border}"/>
                        </Separator.Background>
                    </Separator>
                    <Separator Height="3" Margin="0,239,0,0" VerticalAlignment="Top">
                        <Separator.Background>
                            <SolidColorBrush Color="Black" Opacity="0.5"/>
                        </Separator.Background>
                    </Separator>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>