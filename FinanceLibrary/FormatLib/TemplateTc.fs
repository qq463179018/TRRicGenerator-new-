namespace Ric.FormatLib

module TemplateTc =
    //-----------------------------------------------------------------------
    //                    Template for TH DW Add
    //-----------------------------------------------------------------------
    let WrtAdd =
        HFile([
                Titles(["Logical_Key"; "Secondary_ID"; "Secondary_ID_Type"; "Warrant_Title"; "Issuer_OrgId"; "Issue_Date"; "Country_Of_Issue"; "Governing_Country"; "Announcement_Date"; "Payment_Date"; "Underlying_Type"; "Clearinghouse1_OrgId"; "Clearinghouse2_OrgId"; "Clearinghouse3_OrgId"; "Guarantor"; "Guarantor_Type"; "Guarantee_Type"; "Incr_Exercise_Lot"; "Min_Exercise_Lot"; "Max_Exercise_Lot"; "Rt_Page_Range"; "Underwriter1_OrgId"; "Underwriter1_Role"; "Underwriter2_OrgId"; "Underwriter2_Role"; "Underwriter3_OrgId"; "Underwriter3_Role"; "Underwriter4_OrgId"; "Underwriter4_Role"; "Exercise_Style"; "Warrant_Type"; "Expiration_Date"; "Registered_Bearer_Code"; "Price_Display_Type"; "Private_Placement"; "Coverage_Type"; "Warrant_Status"; "Status_Date"; "Redemption_Method"; "Issue_Quantity"; "Issue_Price"; "Issue_Currency"; "Issue_Price_Type"; "Issue_Spot_Price"; "Issue_Spot_Currency"; "Issue_Spot_FX_Rate"; "Issue_Delta"; "Issue_Elasticity"; "Issue_Gearing"; "Issue_Premium"; "Issue_Premium_PA"; "Denominated_Amount"; "Exercise_Begin_Date"; "Exercise_End_Date"; "Offset_Number"; "Period_Number"; "Offset_Frequency"; "Offset_Calendar"; "Period_Calendar"; "Period_Frequency"; "RAF_Event_Type"; "Exercise_Price"; "Exercise_Price_Type"; "Warrants_Per_Underlying"; "Underlying_FX_Rate"; "Underlying_RIC"; "Underlying_Item_Quantity"; "Units"; "Cash_Currency"; "Delivery_Type"; "Settlement_Type"; "Settlement_Currency"; "Underlying_Group"; "Country1_Code"; "Coverage1_Type"; "Country2_Code"; "Coverage2_Type"; "Country3_Code"; "Coverage3_Type"; "Country4_Code"; "Coverage4_Type"; "Country5_Code"; "Coverage5_Type"; "Note1_Type"; "Note1"; "Note2_Type"; "Note2"; "Note3_Type"; "Note3"; "Note4_Type"; "Note4"; "Note5_Type"; "Note5"; "Note6_Type"; "Note6"; "Exotic1_Parameter"; "Exotic1_Value"; "Exotic1_Begin_Date"; "Exotic1_End_Date"; "Exotic2_Parameter"; "Exotic2_Value"; "Exotic2_Begin_Date"; "Exotic2_End_Date"; "Exotic3_Parameter"; "Exotic3_Value"; "Exotic3_Begin_Date"; "Exotic3_End_Date"; "Exotic4_Parameter"; "Exotic4_Value"; "Exotic4_Begin_Date"; "Exotic4_End_Date"; "Exotic5_Parameter"; "Exotic5_Value"; "Exotic5_Begin_Date"; "Exotic5_End_Date"; "Exotic6_Parameter"; "Exotic6_Value"; "Exotic6_Begin_Date"; "Exotic6_End_Date"; "Event_Type1"; "Event_Period_Number1"; "Event_Calendar_Type1"; "Event_Frequency1"; "Event_Type2"; "Event_Period_Number2"; "Event_Calendar_Type2"; "Event_Frequency2"; "Exchange_Code1"; "Incr_Trade_Lot1"; "Min_Trade_Lot1"; "Min_Trade_Amount1"; "Exchange_Code2"; "Incr_Trade_Lot2"; "Min_Trade_Lot2"; "Min_Trade_Amount2"; "Exchange_Code3"; "Incr_Trade_Lot3"; "Min_Trade_Lot3"; "Min_Trade_Amount3"; "Exchange_Code4"; "Incr_Trade_Lot4"; "Min_Trade_Lot4"; "Min_Trade_Amount4"; "Attached_To_Id"; "Attached_To_Id_Type"; "Attached_Quantity"; "Attached_Code"; "Detachable_Date"; "Bond_Exercise"; "Bond_Price_Percentage"])
                HLine(["{counter}"; ""; "ISIN"; "{name} SHS if[{cp}.EQUALS(C)]then[CALL WTS {bigexpiredate}]else[PUT WTS {bigexpiredate}]"; ""; "{tradingdatewrt}"; "THA"; "THA"; ""; ""; "STOCK"; ""; ""; ""; ""; ""; ""; "100"; "100"; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; "E"; "if[{cp}.EQUALS(C)]then[Call]else[Put]"; "{expiredatewrt}"; "B"; "D"; ""; "C"; ""; ""; ""; "{rawnumber}"; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; "100"; "{maturitydatewrt}"; "{lastexercisedatewrt}"; ""; ""; ""; ""; ""; ""; ""; "{price}"; "A"; "{ratio}"; ""; "{asset}.BK"; "1"; "shr"; ""; "S"; "S"; "THB"; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; "E"; "European Style; DW can be exercised only on Automatic Exercise Date"; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; ""; "SET"; "100"; "100"])
    ])